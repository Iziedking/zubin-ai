[tool:pytest]
# Pytest configuration for ROMA-DSPy resilience system tests

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output and reporting
addopts =
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --color=yes
    --durations=10
    --cov=src/roma_dspy/resilience
    --cov=src/roma_dspy/engine
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-fail-under=85

# Async testing
asyncio_mode = auto

# Markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interaction
    e2e: End-to-end tests for complete workflows
    checkpoint: Tests related to checkpoint functionality
    error_handling: Tests for error propagation and handling
    performance: Performance and resource usage tests
    slow: Tests that take longer to run
    network: Tests that require network access (usually mocked)
    file_io: Tests that perform file I/O operations
    requires_db: Tests requiring PostgreSQL database
    requires_llm: Tests requiring LLM API keys
    requires_e2b: Tests requiring E2B sandbox environment
    tools: Tests for toolkit integrations (crypto, web search, etc)

# Test filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning

# Minimum Python version
minversion = 3.8

# Parallel test execution (if pytest-xdist is installed)
# addopts = --numprocesses=auto